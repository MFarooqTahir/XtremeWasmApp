@page "/Scheme"
@using System.Globalization
@using XtremeModels
@inject NavigationManager nav
@inject WebApiService Api
@inject IDialogService DialogService

<style>

    #numericinpdiv input:focus, #numericinpdiv input.form-control:focus {
        outline: none !important;
        outline-width: 0 !important;
        box-shadow: none;
        -moz-box-shadow: none;
        -webkit-box-shadow: none;
    }

</style>

<AuthorizeView>
    <Authorized>

        <div align-center style="max-width:750px;margin: auto;" class="mt--3 pt-0">
            <div style="display: flex;justify-content: space-between;height:25px;" class="mx-1">
                <MudText Style="align-self:center;" Align="Align.Center"><MudIcon Icon="@Icons.Material.Filled.StackedLineChart" Color="Color.Tertiary" Size="Size.Small"></MudIcon> Inv#: <span style="color:red;margin-right:10px;">@InvNo</span>A/c: <span style="color:darkcyan;margin-right:10px;">@Code</span>Ref: <span style="color:forestgreen">@Ref</span></MudText>
                <MudIconButton Style="align-self:right" Icon="@Icons.Material.Filled.List" OnClick="@OnListClick" Color="@(Color.Tertiary)"></MudIconButton>
            </div>
            <MudSimpleTable Dense="true" Bordered="true" Striped="true" Hover="true" FixedHeader="true" Style="height:205px;">
                <thead>
                    <tr>
                        <th style="background-color: #ffe4b5;color:black;"><b>S #</b></th>
                        <th style="background-color: #ffe4b5;color:black"><b>Digit</b></th>
                        <th style="background-color: #ffe4b5;color:black"><b>Rate</b></th>
                        <th style="text-align:right;background-color: #ffe4b5;color:black"><b>1<sup>st</sup> Prize</b></th>
                        <th style="text-align:right;background-color: #ffe4b5;color:black"><b>2<sup>nd</sup> Prize</b></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Transactions is not null && Transactions?.Any() == true)
                    {
                        var last = Transactions.IndexOf(Transactions[^1]);
                        @if (Transactions[0].sNo is not "0" or "")
                        {
                            snoCountStart = int.Parse(Transactions[0].sNo);
                        }
                        var cNow = -1;
                        @foreach (var transaction in Transactions)
                        {
                            transaction.sNo = snoCountStart.ToString("D5");

                            <tr @onclick="@(()=>OnEntryClick(transaction.MKey))">
                                <td><b>@transaction.sNo</b></td>
                                <td><b>@transaction.Digit</b></td>
                                <td><b>@transaction.sc_rate</b></td>
                                <td style="text-align:right"><b>@transaction.Prize1.ToString("C",numberFormat)</b></td>
                                <td style="text-align:right"><b>@transaction.Prize2.ToString("C",numberFormat)</b></td>
                            </tr>
                            cNow++;
                            snoCountStart++;
                        }
                    }

                </tbody>
            </MudSimpleTable>
            <MudStack Row="true">
                <MudText Class="me-3 mt-3" Style="font-size:20"><b>@Total</b></MudText>
                <div style="align-items: center;align-content:center;display:flex;width:100%;height:50px;" class="mx-auto">
                    @if (repeatData?.RelationPrint == true)
                    {
                        <MudIconButton Style="margin-left:auto;" Icon="@Icons.Material.Filled.Print" Color="@(Color.Warning)"></MudIconButton>
                    }
                    <MudToggleIconButton @bind-Toggled="@AutoPrize" Style=@($"margin-right:auto;{(repeatData?.RelationPrint == false?"margin-left:auto":"")}")
                                         Icon="@Icons.Material.Outlined.ContentCopy" Color="@Color.Default"
                                         ToggledIcon="@Icons.Material.TwoTone.ContentCopy" ToggledColor="@Color.Info" />
                    <MudStack Class="me-0">
                        <span>
                            <b>Win I: <span style="color:red">@(win[0].ToString("F0"))</span></b> &nbsp;&nbsp; <b>Win II: <span style="color:orange">@(win[1].ToString("F0"))</span></b>
                        </span>
                    </MudStack>
                </div>

            </MudStack>


            <MudStack Row="true">
                <div id="numericinpdiv" class="input-group shadow-none" style="max-width:65px;height:55px;margin-top:5px;">
                    <input type="text" style="background-color:transparent;color:var(--mud-palette-text-primary);"
                           placeholder="@(new string('#',4))" inputmode="numeric" class="form-control" pattern="[0-9]*" id="MixDigitInput" maxlength=4 minlength=3
                           disabled="@(DigitEnabled==false)" @onkeypress="@digitKeyDown" @onblur="@lostDigitFocus" @onfocus="@OnDigitFocus"
                           @bind-value="@Digits" />
                </div>


                <MudNumericField id="Rate" OnKeyDown="@RateKeyDown" @bind-Value="Rate" Immediate="true" Label="Rate" Culture="@Curr" HelperText=@($"Limit:{prz1Limit:F0} x {prz2Limit:F0}") HideSpinButtons="true" Disabled="@(RateEnabled==false)" Variant="Variant.Outlined" Min="0" />
                @*<MudNumericField id="Prize1" OnKeyDown="@Prz1KeyDown" @bind-Value="Prize1" HelperText="@($"Limit: {prz1Limit}")" Immediate="true" Label="I Prize" Culture="@Curr" HideSpinButtons="true" Disabled="@(Prz1Enabled==false)" Variant="Variant.Outlined" Min="0" />
                <MudNumericField id="Prize2" OnKeyDown="@Prz2KeyDown"  @bind-Value="Prize2" HelperText="@($"Limit: {prz2Limit}")" Immediate="true" Label="II Prize" Culture="@Curr" HideSpinButtons="true" Disabled="@(Prz2Enabled==false)" Variant="Variant.Outlined" Min="0" />
                *@

                <MudStack Style="min-width:120px;display:flex">
                    <span>1<sup>st</sup> : @((Prize1??0).ToString("F2"))</span>
                    <span>2<sup>nd</sup> : @((Prize2??0).ToString("F2"))</span>
                </MudStack>

                <MudIconButton Disabled="@AddEntryDisabled" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Check" Color="Color.Tertiary" Size="Size.Small" OnClick="@OnDoneClick" Style="margin-top:6px;margin-left:auto;margin-right: 0;height:55px;"></MudIconButton>
                @if (@Editmode)
                {
                    <MudIconButton Variant="Variant.Filled" Icon="@Icons.Material.Filled.Cancel" Color="Color.Error" Size="Size.Small" OnClick="@OnEditCancel" Style="margin-top:6px;height:55px;"></MudIconButton>

                }
            </MudStack>
        </div>
    </Authorized>
</AuthorizeView>

