@using System.Globalization
@using XtremeModels

<MudDialog Style="min-height:600px;">

    <DialogContent>
        <MudText Style="align-self:center;" Align="Align.Center"><MudIcon Icon="@Icons.Material.Filled.Lock" Color="@(Printable?Color.Error:Color.Transparent)" Size="Size.Small"></MudIcon> Inv#: <span style="color:red;margin-right:10px;">@InvNo</span>A/c: <span style="color:darkcyan;margin-right:10px;">@Code</span>Ref: <span style="color:forestgreen">@Ref</span></MudText>

        @if (AllItems is not null && AllItems?.Any() == true)
        {
            snoCountStart = 1;

            <MudSimpleTable Dense="true" Bordered="true" Striped="true" Hover="true" FixedHeader="true" Style="height:405px;">
                <thead>
                    <tr>
                        <th style="background-color: #ffe4b5;color:black;"><b>S #</b></th>
                        @if (pr)
                        {
                            <th style="background-color: #ffe4b5;color:black;text-align:right;"><b>PR</b></th>

                        }
                        <th style="background-color: #ffe4b5;color:black"><b>Digit</b></th>
                        @if (AddRate)
                        {
                            <th style="background-color: #ffe4b5;color:black;text-align:right;"><b>Rate</b></th>

                        }
                        <th style="text-align:center;background-color: #ffe4b5;color:black"><b>1<sup>st</sup></b></th>
                        <th style="text-align:center;background-color: #ffe4b5;color:black"><b>2<sup>nd</sup></b></th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var transaction in AllItems)
                    {
                        transaction.sNo = snoCountStart.ToString("D3");

                        <tr>
                            <td><b>@transaction.sNo</b></td>
                            @if (pr)
                            {
                                <td style="text-align:right"><b>@transaction.PktPerc.ToString("C2",numberFormat)</b></td>

                            }
                            <td><b>@transaction.Digit</b></td>
                            @if (AddRate)
                            {
                                <td style="text-align:right"><b>@transaction.sc_rate.ToString("C2",numberFormat)</b></td>

                            }
                            <td style="text-align:right"><b>@transaction.Prize1.ToString("C2",numberFormat)</b></td>
                            <td style="text-align:right"><b>@transaction.Prize2.ToString("C2",numberFormat)</b></td>
                        </tr>
                        snoCountStart++;
                    }

                </tbody>
            </MudSimpleTable>
            <MudStack Row=true>
                <MudText>Total = @(Math.Ceiling(AddRate? AllItems.Sum(x=>x.sc_rate):AllItems.Sum(x=>x.Prize1+x.Prize2)).ToString("C0",numberFormat))</MudText>
                @if (repeatData?.RelationPrint == true)
                {
                    <MudIconButton Style="margin-left:auto;" Icon="@Icons.Material.Filled.Print" Color="@(Color.Warning)"></MudIconButton>
                }
            </MudStack>
        }
        else
        {
            <MudText>No Entries</MudText>

        }
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    [CascadingParameter]
    RepeatDataReturnWA repeatData { get; set; }
    [Parameter]
    public IEnumerable<Transaction> AllItems { get; set; }
    [Parameter]
    public int InvNo { get; set; }
    [Parameter]
    public string Code { get; set; }
    [Parameter]
    public string Ref { get; set; }
    [Parameter]
    public bool AddRate { get; set; }
    [Parameter]
    public bool pr { get; set; }
    [Parameter]
    public bool Printable { get; set; }
    int snoCountStart = 1;

    private CultureInfo Curr = new CultureInfo("hi-IN");
    private NumberFormatInfo numberFormat { get; set; }
    protected override void OnInitialized()
    {
        numberFormat = Curr.NumberFormat;
        numberFormat.CurrencySymbol = "";
    }
}

